// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using e_Commerce.Infra.Compartilhado;

#nullable disable

namespace eCommerce.Infra.Migrations
{
    [DbContext(typeof(e_CommerceDbContext))]
    partial class eCommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("e_Commerce.Dominio.ModuloCliente.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("e_Commerce.Dominio.ModuloItem.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id_Pedido")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id_Produto")
                        .HasColumnType("uuid");

                    b.Property<int>("Qtd_Produto")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id_Pedido");

                    b.HasIndex("Id_Produto");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("e_Commerce.Dominio.ModuloPedido.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<Guid>("Id_Cliente")
                        .HasColumnType("uuid");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(4, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Cliente");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("e_Commerce.Dominio.ModuloProduto.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(3, 2)");

                    b.HasKey("Id");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("e_Commerce.Dominio.ModuloItem.Item", b =>
                {
                    b.HasOne("e_Commerce.Dominio.ModuloPedido.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("Id_Pedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Commerce.Dominio.ModuloProduto.Produto", "Produto")
                        .WithMany("Itens")
                        .HasForeignKey("Id_Produto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("e_Commerce.Dominio.ModuloPedido.Pedido", b =>
                {
                    b.HasOne("e_Commerce.Dominio.ModuloCliente.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("Id_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("e_Commerce.Dominio.ModuloCliente.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("e_Commerce.Dominio.ModuloPedido.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("e_Commerce.Dominio.ModuloProduto.Produto", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
